ARG BASE_IMAGE="rocm/pytorch:rocm6.4.2_ubuntu24.04_py3.12_pytorch_release_2.6.0"
FROM $BASE_IMAGE

ENV DEBIAN_FRONTEND=noninteractive

SHELL ["conda", "run", "-n", "py_3.12", "/bin/bash", "-c"]

RUN --mount=type=cache,target=/var/cache/apt \
    --mount=type=cache,target=/var/lib/apt \
    apt-get update \
    && apt-get install -y --no-install-recommends \
      git cmake cmake-curses-gui ffmpeg libopenblas-dev vim libavdevice-dev \
      wget portaudio19-dev \
    && apt-get clean

# Clean up apt lists in final image layer - separate RUN to preserve cache mounts
# (cache mounts only exist during the specific RUN that declares them)
RUN rm -rf /var/lib/apt/lists/*

ARG GFX_ARCH=gfx1100
ARG HSA_OVERRIDE_GFX_VERSION
RUN if [ -z "$GFX_ARCH" ]; then echo "GFX_ARCH build arg is required" && exit 1; fi

ENV PYTORCH_ROCM_ARCH=$GFX_ARCH
RUN if [ "$GFX_ARCH" = "gfx1100" ] && [ -z "$HSA_OVERRIDE_GFX_VERSION" ]; then \
      export HSA_OVERRIDE_GFX_VERSION=11.0.0; \
    fi && \
    if [ -n "$HSA_OVERRIDE_GFX_VERSION" ]; then \
      conda env config vars set HSA_OVERRIDE_GFX_VERSION="$HSA_OVERRIDE_GFX_VERSION"; \
    fi
ENV GFX_ARCH=$GFX_ARCH
ENV CTRANSLATE2_ROOT=/opt/ctranslate2
ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$CTRANSLATE2_ROOT/lib

# CTranslate2
RUN git clone https://github.com/arlo-phoenix/CTranslate2-rocm.git --recurse-submodules \
    && cd CTranslate2-rocm \
    && CLANG_CMAKE_CXX_COMPILER=clang++ CXX=clang++ HIPCXX="$(hipconfig -l)/clang" \
      HIP_PATH="$(hipconfig -R)" \
      cmake -S . -B build -DWITH_MKL=OFF \
      -DWITH_HIP=ON -DCMAKE_HIP_ARCHITECTURES=$PYTORCH_ROCM_ARCH \
      -DGPU_TARGETS="$PYTORCH_ROCM_ARCH" -DAMDGPU_TARGETS="$PYTORCH_ROCM_ARCH" \
      -DBUILD_TESTS=ON -DWITH_CUDNN=ON \
    && cmake --build build -- -j16 \
    && cd build \
    && cmake --install . --prefix $CONDA_PREFIX \
    && make install \
    && sudo ln -sf /usr/local/lib/libctranslate2.so /opt/conda/envs/py_3.12/lib/ \
    && ldconfig \
    && cd ../python \
    && pip install -r install_requirements.txt \
    && python setup.py bdist_wheel \
    && pip install dist/*.whl \
    && export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$CONDA_PREFIX/lib/

# Faster-Whisper
WORKDIR /home
RUN git clone --depth 1 --branch v1.1.0 https://github.com/SYSTRAN/faster-whisper.git \
    && cd faster-whisper \
    && pip install . \
    && pip install pytest scipy

ENV CT2_CUDA_ALLOCATOR=cub_caching
ENV CT2_CUDA_CACHING_ALLOCATOR_CONFIG=4,3,12,419430400
